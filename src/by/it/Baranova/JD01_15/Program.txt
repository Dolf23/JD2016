package by.it.Baranova.JD01_06_String;

import java.util.regex.Matcher;
import java.util.regex.Pattern;

/**
 * Created by Ekaterina on 2/13/16.
 */
public class StringFormate {

    public static String[] StringToArray(String sb){
        Pattern p1=Pattern.compile("[-,;:.!?\\s]+");
        String [] words=p1.split(sb);

        return words;


    }

    /**
     * Меняет пятый символ в словах короче 7 символов, и 7 в словах длинее 7 на "#"
     * @param sb текст, передоваемый для форматирования
     * @return sbnew отформатированный текст
     */
    public static StringBuffer ReplaceCharAt (String sb){
      StringBuffer sbnew=new StringBuffer(sb);
      String regex="([А-Яа-яё]{5,})";
      Pattern p1=Pattern.compile(regex);
      Matcher m1=p1.matcher(sbnew);
      while (m1.find()) {
          int pos = m1.start();
          if (m1.group().length() <= 6) {
              sbnew.setCharAt(pos + 4, '#');
          }
          if (m1.group().length() > 6) {
              sbnew.setCharAt(pos + 6, '#');
          }
      }
      return sbnew;
      }

    /**
     * Подсчитывает сколько раз каждое слово повторяется в тексте
     * @param poetry передает матрицу слов, составляющих отрывок
     */
    public static void WordsQuantity (String [] poetry){
        int n=poetry.length;
        String [] wordsnew=new String[n];
        for (int i=0;i<n;i++){
            wordsnew[i]=poetry[i];
        }
        String regex="[А-Яа-яё]{1,}";
        Pattern p1=Pattern.compile(regex);
        for (int i=0;i<n;i++) {
            Matcher m1=p1.matcher(wordsnew[i]);
            boolean b=m1.matches();
            int kol=1;
            for (int j = i + 1; j < n; j++) {
                if (wordsnew[i].equalsIgnoreCase(wordsnew[j])==true&&b==true){
                    kol++;
                    wordsnew[j]="#";
                }
            }
            if (b==true){
                System.out.println("Слово '"+wordsnew[i]+"' встречается "+kol+" раз ");
            }
        }
    }
