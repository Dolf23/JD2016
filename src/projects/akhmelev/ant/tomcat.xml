<project name="Tomcat" default="10deploy" basedir="..">
    <property file="ant/build.properties"/>

    <path id="classpath">
        <fileset dir="${global.lib.dir}" includes="mysql-connector-java-5.1.38.jar" />
        <fileset dir="${global.lib.dir}" includes="servlet-api.jar"/>
    </path>
    <!-- очистка рабочего каталога -->
    <target name="01clean">
        <echo>Cleaning the ${build.dir}</echo>
        <delete dir="${build.dir}"/>
    </target>

    <!-- создание рабочего каталога для классов и библиотек -->
    <target name="02init" depends="01clean">
        <echo>Creating the build directory</echo>
        <mkdir dir="${build.dir}/WEB-INF/classes"/>
        <mkdir dir="${build.dir}/WEB-INF/lib"/>
    </target>

    <!-- компиляция файлов проекта -->
    <target name="03compile" depends="02init">
        <echo>Compile the source files</echo>
        <javac srcdir="${src.dir}" destdir="${build.dir}/WEB-INF/classes">
            <classpath  refid="classpath" />
        </javac>
    </target>

    <!-- копирование в рабочую директорию -->
    <target name="04copy" depends="03compile">
        <copy todir="${build.dir}/WEB-INF">
            <fileset dir="${conf.dir}"/>
        </copy>
        <copy todir="${build.dir}">
            <fileset dir="${web.content}"/>
        </copy>
        <copy todir="${build.dir}/WEB-INF/lib">
            <fileset dir="${local.lib.dir}"/>
        </copy>
    </target>

    <!-- формирование war-сборки (архивация) -->
    <target name="05war" depends="04copy">
        <echo>Building the war file</echo>
        <war destfile="${dist.dir}/${web.root}.war" webxml="${build.dir}/WEB-INF/web.xml">
            <fileset dir="${build.dir}"/>
        </war>
    </target>

    <!-- повторная очистка рабочего каталога -->
    <target name="06finalize" depends="05war">
        <echo>Cleaning the ${build.dir}</echo>
        <delete dir="${build.dir}"/>
    </target>


    <target name="07if-has-tomcat" depends="06finalize">
        <property environment="env"/>
        <condition property="has.tomcat">
            <available file="${tomcat.home.dir}"/>
        </condition>
    </target>


    <target name="08check-if-deployed" depends="07if-has-tomcat" if="has.tomcat">
        <condition property="is.webapp.deployed">
            <http url="${tomcat.base.url}/${web.root}" />
        </condition>

        <path id="tomcat.classpath">
            <!-- We need the Catalina jars for Tomcat -->
            <fileset dir="${tomcat.home.dir}/lib">
                <include name="catalina-ant.jar"/>
                <include name="tomcat-coyote.jar"/>
                <include name="tomcat-util.jar"/>
            </fileset>
            <fileset dir="${tomcat.home.dir}/bin">
                <include name="tomcat-juli.jar"/>
            </fileset>
        </path>

        <!-- Configure the custom Ant tasks for the Manager application -->
        <taskdef name="deploy"    classname="org.apache.catalina.ant.DeployTask" classpathref="tomcat.classpath"/>
        <taskdef name="list"      classname="org.apache.catalina.ant.ListTask" classpathref="tomcat.classpath"/>
        <taskdef name="reload"    classname="org.apache.catalina.ant.ReloadTask" classpathref="tomcat.classpath"/>
        <taskdef name="findleaks" classname="org.apache.catalina.ant.FindLeaksTask" classpathref="tomcat.classpath"/>
        <taskdef name="resources" classname="org.apache.catalina.ant.ResourcesTask" classpathref="tomcat.classpath"/>
        <taskdef name="start"     classname="org.apache.catalina.ant.StartTask" classpathref="tomcat.classpath"/>
        <taskdef name="stop"      classname="org.apache.catalina.ant.StopTask" classpathref="tomcat.classpath"/>
        <taskdef name="undeploy"  classname="org.apache.catalina.ant.UndeployTask" classpathref="tomcat.classpath"/>
    </target>


    <target name="09undeploy" depends="07if-has-tomcat, 08check-if-deployed" if="is.webapp.deployed">
        <!-- TOMCAT undeploy-->
        <echo>url=${tomcat.manager.url} login=${tomcat.user.name} password="${tomcat.user.password}" path="/${web.root}"</echo>


        <undeploy
                url="${tomcat.manager.url}"
                username="${tomcat.user.name}"
                password="${tomcat.user.password}"
                path="/${web.root}"
                />
    </target>


    <target name="10deploy" depends="09undeploy" if="has.tomcat">
        <deploy
                url="${tomcat.manager.url}"
                username="${tomcat.user.name}"
                password="${tomcat.user.password}"
                path="/${web.root}"
                war="${war.fullpath}"
                />
    </target>

    <!-- копирование в каталог Tomcat старый способ
    <target name="10DeployToXampp" depends="10deploy">
        <echo>Cleaning the ${tomcat.webapps}/${web.root}</echo>
        <delete dir="${tomcat.webapps}/${web.root}"/>

        <echo>Deploy ${tomcat.webapps}/${web.root}.war</echo>
        <copy todir="${tomcat.webapps}">
            <fileset file="${dist.dir}/${web.root}.war"/>
        </copy>
    </target>
    -->


</project>